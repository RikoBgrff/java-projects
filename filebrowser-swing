import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import java.nio.file.attribute.FileOwnerAttributeView;
import java.nio.file.attribute.FileTime;
import java.nio.file.attribute.UserPrincipal;

public class FileBrowserApp extends JFrame {

    private JTextArea fileInfoTextArea;

    public FileBrowserApp() {
        super("File Browser");

        JButton openButton = new JButton("Open File");
        fileInfoTextArea = new JTextArea(15, 50);
        fileInfoTextArea.setEditable(false);

        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));

        add(openButton);
        add(new JScrollPane(fileInfoTextArea));

        openButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                openFile();
            }
        });

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        pack();
        setVisible(true);
    }

    private void openFile() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            displayFileInfo(selectedFile);
        }
    }

    private void displayFileInfo(File file) {
        StringBuilder fileInfo = new StringBuilder();
        fileInfo.append("File Name: ").append(file.getName()).append("\n");
        fileInfo.append("Path: ").append(file.getAbsolutePath()).append("\n");
        fileInfo.append("Size: ").append(file.length()).append(" bytes").append("\n");

        Path filePath = file.toPath();
        try {
            BasicFileAttributes fileAttributes = java.nio.file.Files.readAttributes(filePath, BasicFileAttributes.class);
            FileTime createdTime = fileAttributes.creationTime();
            FileTime modifiedTime = fileAttributes.lastModifiedTime();
            UserPrincipal owner = java.nio.file.Files.getFileAttributeView(filePath, FileOwnerAttributeView.class)
                    .getOwner();
            String fileType = java.nio.file.Files.probeContentType(filePath);

            fileInfo.append("Created Date: ").append(createdTime).append("\n");
            fileInfo.append("Modified Date: ").append(modifiedTime).append("\n");
            fileInfo.append("Owner: ").append(owner.getName()).append("\n");
            fileInfo.append("File Type: ").append(fileType != null ? fileType : "N/A").append("\n");

        } catch (Exception e) {
            e.printStackTrace();
            fileInfo.append("Error retrieving file information.");
        }

        fileInfoTextArea.setText(fileInfo.toString());
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FileBrowserApp();
            }
        });
    }
}
